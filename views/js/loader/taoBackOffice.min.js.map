{"version":3,"sources":["../../taoBackOfficeCss/list!css","../controller/list/index.js","../controller/routes.js","../treeRender.js","../controller/tree/view.js","onLayerEnd0.js","module-create.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('css!taoBackOfficeCss/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n */\ndefine('taoBackOffice/controller/list/index',[\n    'jquery',\n    'i18n',\n    'uri',\n    'util/url',\n    'ui/feedback',\n    'ui/dialog/confirm',\n    'layout/section',\n    'core/request',\n    'css!taoBackOfficeCss/list',\n], function ($, __, Uri, urlUtil, feedback, dialogConfirm, section, request) {\n    'use strict';\n\n    function findListContainer(uri) {\n        return $(`#list-data_${uri}`);\n    }\n\n    function clearUri(value) {\n        return value.replace(/^list-element_[0-9]+_/, '');\n    }\n\n    function createEditUriCheckbox(id) {\n        const $checkbox = $('<input>')\n            .attr('type', 'checkbox')\n            .attr('id', id)\n            .change(handleEditCheckboxStateChange);\n\n        const $label = $('<label>')\n            .attr('for', id)\n            .text(__('Edit URI'))\n            .focus();\n\n        return $('<span>')\n            .addClass('lft edit-uri')\n            .append($checkbox, $label);\n    }\n\n    function addSquareBtn(title, icon, $listToolBar, position='rgt') {\n        const $btn = $('<button>', {\n            'class': `btn-info small ${position} icon-${icon}`,\n            title: __(title) }\n        );\n        $listToolBar.append($btn);\n\n        return $btn;\n    }\n\n    function transformListElement($element) {\n        return createListElement($element.attr('id'), $element.text());\n    }\n\n    function createNewListElement(elementId) {\n        return createListElement(`list-element_${elementId}_`);\n    }\n\n    function createListElement(name, value = '') {\n        return $(`<div class='list-element'>\n            <div class='list-element'>\n                <div class='list-element__input-container'>\n                    <input type='text' name='${name}' value='${value}' />\n                    <div class='list-element__input-container__uri'>\n                        <label for='uri_${name}' class='title'>URI</label>\n                        <input id='uri_${name}' type='text' name='uri_${name}' value='${Uri.decode(clearUri(name))}'>\n                    </div>\n                </div>\n                <span class='icon-checkbox-crossed list-element-delete-btn'>\n            </div>\n        </div>`);\n    }\n\n    function handleEditCheckboxStateChange() {\n        findListContainer($(this).attr('id')).toggleClass('with-uri');\n    }\n\n    function handleEditList (targetUri) {\n        const saveUrl = urlUtil.route('saveLists', 'Lists', 'taoBackOffice');\n        const delEltUrl = urlUtil.route('removeListElement', 'Lists', 'taoBackOffice');\n        const uri = getUriValue(targetUri);\n        const $listContainer = findListContainer(uri);\n        let $listForm       = $listContainer.find('form');\n        const $listTitleBar = $listContainer.find('.container-title h6');\n        const $listToolBar  = $listContainer.find('.data-container-footer').empty();\n        let $listSaveBtn;\n        let $listNewBtn;\n\n        if (!$listForm.length) {\n            let nextElementId;\n\n            $listForm = $('<form>');\n            $listContainer.wrapInner($listForm);\n            $listContainer.find('form').append(`<input type='hidden' name='uri' value='${uri}' />`);\n\n            const $labelEdit = $(`<input type='text' name='label' value=''/>`).val($listTitleBar.text());\n            $listTitleBar.closest('.container-title').html($labelEdit);\n            $labelEdit.focus();\n\n            nextElementId = $listContainer.find('.list-element')\n                .replaceWith(function () {\n                    return transformListElement($(this));\n                })\n                .length;\n\n            $listSaveBtn = addSquareBtn(__('Save list'), 'save', $listToolBar);\n            $listSaveBtn.on('click', function () {\n                $.postJson(\n                    saveUrl,\n                    $(this).closest('form').serializeArray(),\n                    response => {\n                        if (response.saved) {\n                            feedback().success(__('List saved'));\n                            section.get('taoBo_list').loadContentBlock(urlUtil.route('index', 'Lists', 'taoBackOffice'));\n                        } else {\n                            const errors = (response.errors || []).length\n                                ? `<ul><li>${response.errors.join('</li><li>')}</li></ul>`\n                                : '';\n\n                            feedback().error(\n                                `${__('List not saved')}${errors}`,\n                                {encodeHtml: false}\n                            );\n                        }\n                    }\n                );\n                return false;\n            });\n\n            $listNewBtn = addSquareBtn('New element', 'add', $listToolBar);\n            $listNewBtn.click(function () {\n                const $list = $(this).closest('form').find('ol');\n\n                $list.append($('<li>').append(createNewListElement(nextElementId++)))\n                    .closest('.container-content').scrollTop($list.height());\n\n                return false;\n            });\n\n            $listToolBar.append(createEditUriCheckbox(uri));\n\n            $listToolBar.append();\n        }\n\n        $listContainer.on('click', '.list-element-delete-btn', function () {\n            const $element = $(this).closest('li');\n            const $input   = $element.find('input:text');\n            const eltUri   = clearUri($input.attr('name'));\n\n            const deleteLocalElement = () => {\n                $element.remove();\n                feedback().success(__('Element deleted'));\n            };\n\n            const deleteServerAndLocalElement = () => {\n                $.postJson(\n                    delEltUrl,\n                    { uri : eltUri },\n                    response => {\n                        if (response.deleted) {\n                            deleteLocalElement();\n                        } else {\n                            feedback().error(__('Element not deleted'));\n                        }\n                    }\n                );\n            };\n\n            const deleteElement = () => {\n                if (eltUri) {\n                    deleteServerAndLocalElement();\n                } else {\n                    deleteLocalElement();\n                }\n            };\n\n            if ($input.val() === '') {\n                deleteElement();\n            } else {\n                dialogConfirm(\n                    __('Please confirm you want to delete this list element.'),\n                    deleteElement\n                );\n            }\n        });\n    };\n\n    async function handleCreateList() {\n        const url = '/taoBackOffice/Lists';\n        const newList = await request({\n            url: url,\n            method: \"POST\",\n        });\n\n        newList.data.uri = Uri.encode(newList.data.uri);\n        addNewList(newList.data);\n    };\n\n    function addNewList(newList) {\n        const $newListContainer = createListContainer(newList);\n        addHandlerListeners($newListContainer);\n        $('.data-container-wrapper').append($newListContainer);\n        handleEditList(newList.uri);\n    }\n\n    function handleDeleteList() {\n        const delListUrl = urlUtil.route('removeList', 'Lists', 'taoBackOffice');\n        const $btn  = $(this);\n\n        dialogConfirm(\n            __('Please confirm you want to delete this list. This operation cannot be undone.'),\n            function accept() {\n                const uri   = $btn.data('uri');\n                const $list = $btn.parents('.data-container');\n                $.postJson(\n                    delListUrl,\n                    { uri },\n                    response => {\n                        if (response.deleted) {\n                            feedback().success(__('List deleted'));\n                            $list.remove();\n                        } else {\n                            feedback().error(__('List not deleted'));\n                        }\n                    }\n                );\n            }\n        );\n    };\n\n    function handleReloadList() {\n        const reloadListUrl = urlUtil.route('reloadRemoteList', 'Lists', 'taoBackOffice');\n        const uri = $(this).data('uri');\n\n        $.postJson(\n            reloadListUrl,\n            { uri },\n            response => {\n                if (response.saved) {\n                    feedback().success(__('List reloaded'));\n                    section.get('taoBo_remotelist').loadContentBlock(urlUtil.route('remote', 'Lists', 'taoBackOffice'));\n                } else {\n                    feedback().error(__('List failed to be reloaded'));\n                }\n            }\n        );\n    };\n\n    function addHandlerListeners($listContainer) {\n        $listContainer.on('click', '.list-edit-btn', handleEditList);\n        $listContainer.on('click', '.list-delete-btn', handleDeleteList);\n        $listContainer.on('click', '.list-reload-btn', handleReloadList);\n    };\n\n    function createListContainer(newList) {\n        return $(`<section id='list-data_${newList.uri}' class=\"data-container list-container\">\n        <header class=\"container-title\">\n            <h6>${newList.label}</h6>\n        </header>\n\n        <div class=\"container-content\" id='list-elements_${newList.uri}'>\n            <ol>\n                <li id=\"list-element_0\">\n                    <span class=\"list-element\" id=\"list-element_0_${Uri.encode(newList.elements[0].uri)}\">${newList.elements[0].label}</span>\n                </li>\n            </ol>\n        </div>\n        <footer class=\"data-container-footer action-bar\">\n            <button type=\"button\" title=\"${__('Edit this list')}\" class=\"icon-edit list-edit-btn btn-info small rgt\" data-uri=\"${newList.uri}\">\n            </button>\n            <button type=\"button\" title=\"${__('Delete this list')}\" class=\"icon-bin list-delete-btn btn-warning small rgt\" data-uri=\"${newList.uri}\">\n            </button>\n        </footer> `);\n    };\n\n    function getUriValue(targetUri) {\n        if (typeof targetUri === 'string') {\n            return targetUri;\n        } else if (targetUri.currentTarget){\n            return $(targetUri.currentTarget).data('uri');\n        }\n    };\n\n    return {\n\n        /**\n         * The list controller entrypoint\n         */\n        start() {\n            $('.form-submitter').off('click').on('click', (function (e) {\n                e.preventDefault();\n                handleCreateList();\n            }));\n\n            $('.list-edit-btn').click(handleEditList);\n\n            $('.list-delete-btn').click(handleDeleteList);\n\n            $('.list-reload-btn').click(handleReloadList);\n        }\n    };\n});\n\n","define('taoBackOffice/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index',\n                'remote' : 'controller/list/index'\n            }\n        },\n        'Trees': {\n            'actions': {\n                'viewTree': 'controller/tree/view'\n            }\n        }\n    };\n});\n\n","define('taoBackOffice/treeRender',[\n    'jquery',\n    'lodash',\n    'taoBackOffice/lib/vis/vis',\n    'css!taoBackOffice/lib/vis/vis'\n], function ($, _, vis) {\n    'use strict';\n\n    var network = null;\n    var treeContainer = null;\n    var settings = null;\n    var data = null;\n\n    /**\n     * @private\n     */\n    function destroy() {\n        if (network !== null) {\n            network.destroy();\n            network = null;\n        }\n    }\n\n    var treeRender = {\n\n        /**\n         *\n         * @param {Element} container\n         * @param {Object} [treeData]\n         * @param {Object} [options]\n         */\n        init: function (container, treeData, options) {\n\n            if (!container instanceof Element) {\n                throw new TypeError(\"tree container must be specified\");\n            }\n\n            treeContainer = container;\n            options = options || {};\n            treeData = treeData || {nodes: [], edges: []};\n\n\n            settings = {\n                layout: {\n                    hierarchical: {\n                        sortMethod: 'directed',\n                        \"levelSeparation\": 200\n                    }\n                },\n                nodes: {\n                    shape: 'box',\n                    \"color\": {\n                        \"border\": \"#222\",\n                        \"background\": \"#f2f0ee\",\n\n                        \"highlight\": {\n                            \"border\": \"#222\",\n                            \"background\": \"#f2f0ee\"\n                        }\n                    },\n\n                    \"font\": {\n                        \"face\": \"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif\",\n                        \"color\": \"#222\"\n                    }\n\n                },\n                edges: {\n                    smooth: false,\n                    width: 0.2,\n                    color: {\n                        color: \"#222\"\n                    },\n                    arrows: {to: true},\n                    \"physics\": false,\n                    \"scaling\": {\n                        \"label\": false\n                    }\n                }\n            };\n\n            $.extend(settings, options);\n\n            // create a network\n            data = {\n                nodes: treeData.nodes ? treeData.nodes : [],\n                edges: treeData.edges ? treeData.edges : []\n            };\n\n        },\n\n        run: function () {\n            destroy();\n\n            network = new vis.Network(treeContainer, data, settings);\n\n            network.once('initRedraw', function () {\n\n                if (data.nodes.length > 100) {\n                    network.setOptions($.extend(settings, {\n                        physics: {\n                            hierarchicalRepulsion: {\n                                nodeDistance: 200\n                            },\n                            stabilization: {\n                                fit: false\n                            }\n                        }\n                    }));\n\n                    network.fit({\n                        nodes: [data.nodes[0].id, data.nodes[1].id], animation: {\n                            duration: 400,\n                            easingFunction: 'linear'\n                        }\n                    });\n                }\n\n            });\n        }\n    };\n\n    return treeRender;\n});\n\n","define('taoBackOffice/controller/tree/view',[\n    'layout/actions/binder',\n    'uri',\n    'jquery',\n    'context',\n    'helpers',\n    'taoBackOffice/treeRender'\n], function (binder, uri, $, context, helpers, treeRender) {\n    'use strict';\n\n    /**\n     *\n     * @type {{start: Function}}\n     */\n    var itemRunnerController = {\n\n        //the controller initialization\n        start: function () {\n        \t\n        \t$('.tree-container').each(function(i, obj) {\n        \t\tvar $container = $(obj);\n                var uri = $container.data('id');\n\n                $.post(helpers._url('getTree', 'Trees', 'taoBackOffice'), {uri: uri}, function (treeData) {\n\n                    var $parent = $container.closest('.content-block');\n\n                    var resizeContainer = function () {\n                        $container.height($parent.height() - $parent.find('.panel').eq(0).outerHeight());\n                        $container.width($parent.width());\n                    };\n\n                    $(window).on('resize', resizeContainer);\n\n                    resizeContainer();\n                    treeRender.init($container[0], treeData);\n                    treeRender.run();\n\n                });\n        \t});\n        }\n    };\n\n    // the controller is exposed\n    return itemRunnerController;\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.list-container .container-content .list-element{display:flex;width:100%}.list-container .container-content .list-element-delete-btn{font-size:2em;cursor:pointer;margin-left:4px}.list-container .container-content .list-element__input-container{flex:1}.list-container .container-content .list-element__input-container__uri{display:none;align-items:center;margin-top:2px;margin-bottom:10px;background:#e1e2e3}.list-container .container-content .list-element .title{color:#222;border:1px #ccc solid;border-top-left-radius:2px;border-bottom-left-radius:2px;margin:0;padding:3px}.list-container .container-content .list-element .title ~ input{border-top-left-radius:0;border-bottom-left-radius:0;border-left:none}.list-container .container-content .list-element input{width:100%}.list-container .edit-uri{display:flex;color:initial;font-family:\\\"Source Sans Pro\\\",sans-serif}.section-container .content-block .data-container-wrapper .list-container form{background-color:#f3f1ef}.section-container .content-block .data-container-wrapper .list-container form .data-container-footer{border-top:0 !important}.with-uri .container-content .list-element__input-container__uri{display:flex}.create-list-wrapper{display:flex}.create-list-wrapper #createList{background:none;border:0;padding:0}.create-list-wrapper .form-toolbar{margin:10px 0 50px 0}\\n\\n/*# sourceMappingURL=../../../taoBackOffice/views/css/list.css.map */');\n","\ndefine(\"taoBackOffice/loader/taoBackOffice.bundle\", function(){});\n"]}