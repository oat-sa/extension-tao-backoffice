{"version":3,"names":["define","hb","template","compiler","main","container","depth0","helpers","partials","data","helper","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","escapeExpression","hooks","helperMissing","nullContext","name","hash","loc","start","line","column","end","useData","$","__","Uri","urlUtil","feedback","dialogConfirm","section","request","tooltipTpl","tooltip","findListContainer","uri","clearUri","value","replace","createEditUriCheckbox","id","$checkbox","attr","change","handleEditCheckboxStateChange","$label","text","focus","addClass","append","createButton","title","icon","position","arguments","length","$btn","class","\"data-testid\"","transformListElement","$element","createListElement","createNewListElement","elementId","decode","toggleClass","showElementsEditControls","$listContainer","find","replaceWith","handleEditList","targetUri","isLimitReached","totalItems","maxItems","getUriValue","list","offset","children","batchSize","parseInt","val","loadListElements","then","newListData","toggleAddButton","isDisabled","$listNewBtn","$tooltip","hasChangedListItemValue","form","item","formerValue","formerURI","newURI","trim","hasChangedListItemURI","cleanName","substring","newValue","listItemHasChanged","startsWith","extendListWithNewElements","saveUrl","route","delEltUrl","$listForm","$listTitleBar","$listToolBar","empty","message","$listSaveBtn","totalCount","nextElementId","wrapInner","$labelEdit","$listNewContainer","closest","html","on","postJson","serializeArray","filter","response","saved","success","get","loadContentBlock","errors","join","error","encodeHtml","click","$list","scrollTop","height","lookup","$input","eltUri","deleteLocalElement","remove","deleteServerAndLocalElement","deleted","deleteElement","handleCreateList","$form","isRemoteListCreation","includes","url","method","serialize","encode","addNewList","catch","err","newList","isRemoteList","$newListContainer","createListContainer","addHandlerListeners","containerIdentifier","handleDeleteList","delListUrl","accept","parents","handleReloadList","reloadListUrl","label","renderListElements","elements","map","element","index","renderListElement","newElementIndex","push","currentTarget","handleLoadMore","listUri","limit","loadMoreUrl","res","Promise","resolve","getJSON","_ref","listContainer","buffer","i","len","hide","off","e","preventDefault","target","Lists","actions","remote","Trees","viewTree","_","vis","destroy","network","treeContainer","settings","treeRender","init","treeData","options","Element","TypeError","nodes","edges","layout","hierarchical","sortMethod","levelSeparation","shape","color","border","background","highlight","font","face","smooth","width","arrows","to","physics","scaling","extend","run","Network","once","setOptions","hierarchicalRepulsion","nodeDistance","stabilization","fit","animation","duration","easingFunction","binder","context","itemRunnerController","each","obj","$container","post","_url","$parent","resizeContainer","eq","outerHeight","window","c","d","document","a","s","createElement","type","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["../tpl/tooltip!tpl","../../taoBackOfficeCss/list!css","../controller/list/index.js","../controller/routes.js","../treeRender.js","../controller/tree/view.js","onLayerEnd0.js","module-create.js"],"sourcesContent":["\ndefine('tpl!taoBackOffice/tpl/tooltip', ['handlebars'], function(hb){ return hb.template({\"compiler\":[8,\">= 4.3.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var helper, lookupProperty = container.lookupProperty || function(parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined\n    };\n\n  return \"<div class=\\\"tooltip-container\\\">\\n    <span class=\\\"tooltipstered\\\" data-tooltip=\\\"~ .tooltip-content\\\" data-tooltip-theme=\\\"info\\\"></span>\\n    <div class=\\\"tooltip-content\\\">\\n        \"\n    + container.escapeExpression(((helper = (helper = lookupProperty(helpers,\"message\") || (depth0 != null ? lookupProperty(depth0,\"message\") : depth0)) != null ? helper : container.hooks.helperMissing),(typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{\"name\":\"message\",\"hash\":{},\"data\":data,\"loc\":{\"start\":{\"line\":4,\"column\":8},\"end\":{\"line\":4,\"column\":19}}}) : helper)))\n    + \"\\n    </div>\\n</div>\";\n},\"useData\":true}); });\n","\ndefine('css!taoBackOfficeCss/list',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA;\n */\ndefine('taoBackOffice/controller/list/index',[\n    'jquery',\n    'i18n',\n    'uri',\n    'util/url',\n    'ui/feedback',\n    'ui/dialog/confirm',\n    'layout/section',\n    'core/request',\n    'tpl!taoBackOffice/tpl/tooltip',\n    'ui/tooltip',\n    'css!taoBackOfficeCss/list'\n], function ($, __, Uri, urlUtil, feedback, dialogConfirm, section, request, tooltipTpl, tooltip) {\n    'use strict';\n\n    function findListContainer(uri) {\n        return $(`#list-data_${uri}`);\n    }\n\n    function clearUri(value) {\n        return value.replace(/^list-element_[0-9]+_/, '');\n    }\n\n    function createEditUriCheckbox(id) {\n        const $checkbox = $('<input>')\n            .attr('type', 'checkbox')\n            .attr('id', id)\n            .attr('data-testid', 'editUriCheckbox')\n            .change(handleEditCheckboxStateChange);\n\n        const $label = $('<label>')\n            .attr('for', id)\n            .text(__('Edit URI'))\n            .focus();\n\n        return $('<span>')\n            .addClass('lft edit-uri')\n            .append($checkbox, $label);\n    }\n\n    function createButton(title, icon, position='rgt') {\n        const $btn = $('<button>', {\n            'class': `btn-info small ${position} icon-${icon}`,\n            'data-testid': (`${icon}ElementButton`),\n            title: __(title) }\n        );\n\n        return $btn;\n    }\n\n    function transformListElement($element) {\n        return createListElement($element.attr('id'), $element.text());\n    }\n\n    function createNewListElement(elementId) {\n        return createListElement(`list-element_${elementId}_`);\n    }\n\n    function createListElement(name, value = '') {\n        const uri = Uri.decode(clearUri(name));\n        return $(`<div class='list-element'>\n            <div class='list-element'>\n                <div class='list-element__input-container'>\n                    <input type='text' name='${name}' value='${value}' data-testid='elementNameInput' data-former-value='${value}'/>\n                    <div class='list-element__input-container__uri'>\n                        <label for='uri_${name}' class='title'>URI</label>\n                        <input id='uri_${name}' type='text' name='uri_${name}' value='${uri}' data-former-value='${uri}' data-testid='elementUriInput'>\n                    </div>\n                </div>\n                <span class='icon-checkbox-crossed list-element-delete-btn' data-testid='deleteElementButton'>\n            </div>\n        </div>`);\n    }\n\n    function handleEditCheckboxStateChange() {\n        findListContainer($(this).attr('id')).toggleClass('with-uri');\n    }\n\n    function showElementsEditControls($listContainer) {\n        $listContainer.find('span.list-element')\n            .replaceWith(function () {\n                return transformListElement($(this));\n            });\n    }\n\n    function handleEditList (targetUri) {\n        const uri = getUriValue(targetUri);\n        const $listContainer = findListContainer(uri);\n        const list = $listContainer.find('ol');\n        const offset = list.children('[id^=list-element]').length;\n        const batchSize = 100;\n        let totalItems = 0;\n        let maxItems = 1000;\n\n        if($('#data-max-items').length !== 0) {\n            maxItems = parseInt($('#data-max-items').val(), 10);\n        }\n\n        function isLimitReached() {\n            return totalItems >= maxItems;\n        }\n\n        loadListElements(uri, offset, batchSize).then(newListData => {\n            extendListWithNewElements(newListData, $listContainer);\n\n            const saveUrl = urlUtil.route('saveLists', 'Lists', 'taoBackOffice');\n            const delEltUrl = urlUtil.route('removeListElement', 'Lists', 'taoBackOffice');\n            let $listForm = $listContainer.find('form');\n            const $listTitleBar = $listContainer.find('.container-title h6');\n            const $listToolBar = $listContainer.find('.data-container-footer').empty();\n            const $tooltip = $(tooltipTpl({\n                message : __('Maximum allowed number of elements is reached, you cannot add more elements. Please contact your administrator.')\n            }));\n            let $listSaveBtn;\n            let $listNewBtn;\n\n            totalItems = newListData.totalCount;\n\n            function toggleAddButton(isDisabled) {\n                $listNewBtn.attr('disabled', isDisabled);\n                $tooltip.toggleClass('tooltip-hidden', !isDisabled);\n            }\n\n            function hasChangedListItemValue(form, item) {\n                const formerValue = $('[name=\"' + item.name + '\"]', form).data('formerValue');\n                const formerURI = $('[name=\"uri_' + item.name + '\"]', form).data('formerValue');\n                const newURI = $('[name=\"uri_' + item.name + '\"]', form).val();\n\n                if (formerURI.trim() == '') {\n                    return true; // New item\n                }\n\n                return ((formerValue != item.value) || (formerURI != newURI));\n            }\n\n            function hasChangedListItemURI(form, item) {\n                const cleanName = item.name.substring(4);\n                const formerURI = $('[name=\"' + item.name + '\"]', form).data('formerValue');\n                const formerValue = $('[name=\"' + cleanName + '\"]', form).data('formerValue');\n                const newValue = $('[name=\"' + cleanName + '\"]', form).val();\n\n                if (formerURI.trim() == '') {\n                    return true; // New item\n                }\n\n                return ((formerValue != newValue) || (formerURI != item.value));\n            }\n\n            /**\n             * We should keep all data for elements whose value *or* URI has changed\n             * (that is, we send both in case either the URI or the value has changed).\n             * Therefore, this function checks also, for each input, if the associated\n             * URI (for values) or value (for URIs) has also changed to do the filtering.\n             */\n            function listItemHasChanged(form, item) {\n                if (!item.hasOwnProperty('name') || !item.hasOwnProperty('value')) {\n                    return true;\n                }\n\n                if (item.name.startsWith('list-element_')) {\n                    return hasChangedListItemValue(form, item);\n                } else if (item.name.startsWith('uri_list-element_')) {\n                    return hasChangedListItemURI(form, item);\n                }\n\n                // Always send the name and URI for the list itself (only\n                // list element inputs may be filtered out)\n                return true;\n            }\n\n            if (!$listForm.length) {\n                let nextElementId = totalItems;\n\n                $listForm = $('<form>');\n                $listContainer.wrapInner($listForm);\n                $listContainer.find('form').append(`<input type='hidden' name='uri' value='${uri}' />`);\n\n                const $labelEdit = $(`<input type='text' name='label' value='' data-testid='listNameInput' />`).val($listTitleBar.text());\n                const $listNewContainer = $('<div></div>', {'class': 'add-button-container'});\n\n                $listTitleBar.closest('.container-title').html($labelEdit);\n                $labelEdit.focus();\n\n                showElementsEditControls($listContainer);\n\n                $listSaveBtn = createButton(__('Save list'), 'save');\n                $listSaveBtn.on('click', function () {\n                    const form = $(this).closest('form');\n\n                    $.postJson(\n                        saveUrl,\n                        form.serializeArray().filter((item) => listItemHasChanged(form, item)),\n                        response => {\n                            if (response.saved) {\n                                feedback().success(__('List saved'));\n                                section.get('taoBo_list').loadContentBlock(urlUtil.route('index', 'Lists', 'taoBackOffice'));\n                            } else {\n                                const errors = (response.errors || []).length\n                                    ? `<ul><li>${response.errors.join('</li><li>')}</li></ul>`\n                                    : '';\n\n                                feedback().error(\n                                    `${__('List not saved')}${errors}`,\n                                    {encodeHtml: false}\n                                );\n                            }\n                        }\n                    );\n                    return false;\n                });\n\n                $listNewBtn = createButton('New element', 'add');\n                $listNewBtn.click(function () {\n                    const $list = $(this).closest('form').find('ol');\n\n                    totalItems = totalItems + 1;\n                    toggleAddButton(isLimitReached());\n\n                    $list.append($('<li>').append(createNewListElement(nextElementId++)))\n                         .closest('.container-content').scrollTop($list.height());\n\n                    return false;\n                });\n\n                $listNewContainer.append($listNewBtn, $tooltip);\n                $listToolBar.append($listSaveBtn, $listNewContainer, createEditUriCheckbox(uri));\n\n                tooltip.lookup($listNewContainer);\n                toggleAddButton(isLimitReached());\n            }\n\n            $listContainer.on('click', '.list-element-delete-btn', function () {\n                const $element = $(this).closest('li');\n                const $input   = $element.find('input:text');\n                const eltUri   = clearUri($input.attr('name'));\n\n                const deleteLocalElement = () => {\n                    $element.remove();\n                    totalItems = totalItems - 1;\n                    toggleAddButton(isLimitReached());\n                    feedback().success(__('Element deleted'));\n                };\n\n                const deleteServerAndLocalElement = () => {\n                    $.postJson(\n                        delEltUrl,\n                        { uri : eltUri },\n                        response => {\n                            if (response.deleted) {\n                                deleteLocalElement();\n                            } else {\n                                feedback().error(__('Element not deleted'));\n                            }\n                        }\n                    );\n                };\n\n                const deleteElement = () => {\n                    if (eltUri) {\n                        deleteServerAndLocalElement();\n                    } else {\n                        deleteLocalElement();\n                    }\n                };\n\n                if ($input.val() === '') {\n                    deleteElement();\n                } else {\n                    dialogConfirm(\n                        __('Please confirm you want to delete this list element.'),\n                        deleteElement\n                    );\n                }\n            });\n        });\n    }\n\n    function handleCreateList($form) {\n        const isRemoteListCreation = ($form.attr('action') || '').includes('remote');\n\n        request({\n            url: isRemoteListCreation\n                ? urlUtil.route('remote', 'Lists', 'taoBackOffice')\n                : urlUtil.route('index', 'Lists', 'taoBackOffice'),\n            method: 'POST',\n            data: isRemoteListCreation\n                ? $form.serialize()\n                : null,\n        }).then(response => {\n            response.data.uri = Uri.encode(response.data.uri);\n            addNewList(response.data, isRemoteListCreation);\n        }).catch(function(err) {\n            feedback().error(err.response.message || err);\n        });\n    }\n\n    function addNewList(newList, isRemoteList) {\n        const $newListContainer = createListContainer(newList, isRemoteList);\n        addHandlerListeners($newListContainer);\n\n        const containerIdentifier = isRemoteList ? '#panel-taoBo_remotelist' : '#panel-taoBo_list';\n        $(`${containerIdentifier} .data-container-wrapper`).append($newListContainer);\n\n        if (!isRemoteList) {\n            handleEditList(newList.uri);\n        }\n    }\n\n    function handleDeleteList() {\n        const delListUrl = urlUtil.route('removeList', 'Lists', 'taoBackOffice');\n        const $btn  = $(this);\n\n        dialogConfirm(\n            __('Please confirm you want to delete this list. This operation cannot be undone.'),\n            function accept() {\n                const uri   = $btn.data('uri');\n                const $list = $btn.parents('.data-container');\n                $.postJson(\n                    delListUrl,\n                    { uri },\n                    response => {\n                        if (response.deleted) {\n                            feedback().success(__('List deleted'));\n                            $list.remove();\n                        } else {\n                            feedback().error(__('List not deleted'));\n                        }\n                    }\n                );\n            }\n        );\n    }\n\n    function handleReloadList() {\n        const reloadListUrl = urlUtil.route('reloadRemoteList', 'Lists', 'taoBackOffice');\n        const uri = $(this).data('uri');\n\n        $.postJson(\n            reloadListUrl,\n            { uri },\n            response => {\n                if (response.saved) {\n                    feedback().success(__('List reloaded'));\n                    section.get('taoBo_remotelist').loadContentBlock(urlUtil.route('remote', 'Lists', 'taoBackOffice'));\n                } else {\n                    feedback().error(response.message || __('List failed to be reloaded'));\n                }\n            }\n        );\n    }\n\n    function addHandlerListeners($listContainer) {\n        $listContainer.on('click', '.list-edit-btn', handleEditList);\n        $listContainer.on('click', '.list-delete-btn', handleDeleteList);\n        $listContainer.on('click', '.list-reload-btn', handleReloadList);\n    }\n\n    function createListContainer(newList, isRemoteList) {\n        return $(\n            `<section id=\"list-data_${newList.uri}\" class=\"data-container list-container\">\n                <header class=\"container-title\">\n                    <h6>${newList.label}</h6>\n                </header>\n                <div class=\"container-content\" id=\"list-elements_${newList.uri}\">\n                    ${renderListElements(newList, isRemoteList)}\n                </div>\n                <footer class=\"data-container-footer action-bar\">\n                    <button\n                        type=\"button\"\n                        title=\"${isRemoteList ? __('Reload this list') : __('Edit this list')}\"\n                        class=\"icon-reload ${isRemoteList ? 'list-reload-btn' : 'list-edit-btn'} btn-info small rgt\"\n                        data-uri=\"${newList.uri}\"\n                    ></button>\n                    <button\n                        type=\"button\"\n                        title=\"${__('Delete this list')}\"\n                        class=\"icon-bin list-delete-btn btn-warning small rgt\"\n                        data-uri=\"${newList.uri}\"\n                    ></button>\n                </footer>\n            </section>`\n        );\n    }\n\n    function renderListElements(newList, isRemoteList) {\n        let list = newList.elements.map((element, index) => {\n            return renderListElement(index, element.uri, element.label);\n        });\n\n        if (isRemoteList && newList.totalCount > newList.elements.length) {\n            const newElementIndex = newList.elements.length + 1;\n\n            list.push(renderListElement(newElementIndex, '', '...'));\n        }\n\n        return `<ol data-testid=\"elements\">${list.join('')}</ol>`;\n    }\n\n    function renderListElement(index, uri, label) {\n        return `<li id=\"list-element_${index}\">\n            <span class=\"list-element\" id=\"list-element_${index}_${Uri.encode(uri)}\">${label}</span>\n        </li>`;\n    }\n\n    function getUriValue(targetUri) {\n        if (typeof targetUri === 'string') {\n            return targetUri;\n        } else if (targetUri.currentTarget){\n            return $(targetUri.currentTarget).data('uri');\n        }\n    }\n\n    /**\n     * Requests new set of list elements and extends DOM list with them\n     */\n    function handleLoadMore() {\n        const $btn  = $(this);\n        const listUri   = getUriValue($btn.data('uri'));\n        const $listContainer = findListContainer(listUri);\n        const offset = $listContainer.find('ol').children('[id^=list-element]').length;\n        $btn.find('a').text('Loading...');\n        $btn.find('.icon-loop').toggleClass('rotate');\n        loadListElements(listUri, offset).then(newListData => {\n            $btn.find('a').text('Load more');\n            $btn.find('.icon-loop').toggleClass('rotate');\n            extendListWithNewElements(newListData, $listContainer, listUri);\n\n            if ($listContainer.find('form').length) {\n                showElementsEditControls($listContainer);\n            }\n        });\n    }\n\n    /**\n     * Loads a set of list elements\n     * @param {string} listUri - list uri\n     * @param {number} offset - element index to retrieve elements from\n     * @param {number} limit - number of list element to get (0 is no limit)\n     * @returns {Promise}\n     */\n    function loadListElements(listUri, offset, limit) {\n        const loadMoreUrl = urlUtil.route('getListElements', 'Lists', 'taoBackOffice');\n\n        const res = new Promise(resolve => {\n            $.getJSON(\n                loadMoreUrl,\n                { listUri, offset, limit },\n                response => {\n                    resolve(response.data);\n                }\n            );\n        });\n        return res;\n    }\n\n    /**\n     * Extends list node with new elements and hides pagination container if all elements are loaded\n     * @param {Object} param0\n     * @param {Object} [param0.elements] - new elements to include on list node\n     * @param {Object} [param0.totalCount] - total number of list elements\n     * @param {Object} listContainer - Jquery listContainer node\n     */\n    function extendListWithNewElements({elements, totalCount}, listContainer) {\n        const $list = listContainer.find('ol');\n        let offset = $list.children('[id^=list-element]').length;\n        let buffer = '';\n\n        for (let i = 0, id = '', len = elements.length; i < len; i++) {\n            id = `list-element_${offset++}_`;\n            buffer += `<li id=${id}><span class='list-element' id='${id}${elements[i].uri}'>${elements[i].label}</span></li>`;\n        }\n\n        $list.append(buffer).closest('.container-content').scrollTop($list.height());\n\n        if (offset === totalCount) {\n            listContainer.find('.pagination-container').hide();\n        }\n    }\n\n    return {\n        // The list controller entrypoint\n        start() {\n            $('.form-submitter').off('click').on('click', (e => {\n                e.preventDefault();\n\n                handleCreateList($(e.target).closest('form'));\n            }));\n\n            $('.list-edit-btn').click(handleEditList);\n            $('.list-delete-btn').click(handleDeleteList);\n            $('.list-reload-btn').click(handleReloadList);\n            $('.load-more-btn').click(handleLoadMore);\n        }\n    };\n});\n\n","define('taoBackOffice/controller/routes',[],function () {\n    'use strict';\n\n    return {\n        'Lists' : {\n            'actions' : {\n                'index' : 'controller/list/index',\n                'remote' : 'controller/list/index'\n            }\n        },\n        'Trees': {\n            'actions': {\n                'viewTree': 'controller/tree/view'\n            }\n        }\n    };\n});\n\n","define('taoBackOffice/treeRender',[\n    'jquery',\n    'lodash',\n    'taoBackOffice/lib/vis/vis',\n    'css!taoBackOffice/lib/vis/vis'\n], function ($, _, vis) {\n    'use strict';\n\n    var network = null;\n    var treeContainer = null;\n    var settings = null;\n    var data = null;\n\n    /**\n     * @private\n     */\n    function destroy() {\n        if (network !== null) {\n            network.destroy();\n            network = null;\n        }\n    }\n\n    var treeRender = {\n\n        /**\n         *\n         * @param {Element} container\n         * @param {Object} [treeData]\n         * @param {Object} [options]\n         */\n        init: function (container, treeData, options) {\n\n            if (!container instanceof Element) {\n                throw new TypeError(\"tree container must be specified\");\n            }\n\n            treeContainer = container;\n            options = options || {};\n            treeData = treeData || {nodes: [], edges: []};\n\n\n            settings = {\n                layout: {\n                    hierarchical: {\n                        sortMethod: 'directed',\n                        \"levelSeparation\": 200\n                    }\n                },\n                nodes: {\n                    shape: 'box',\n                    \"color\": {\n                        \"border\": \"#222\",\n                        \"background\": \"#f2f0ee\",\n\n                        \"highlight\": {\n                            \"border\": \"#222\",\n                            \"background\": \"#f2f0ee\"\n                        }\n                    },\n\n                    \"font\": {\n                        \"face\": \"'Franklin Gothic', 'Franklin Gothic Medium', 'Source Sans Pro', sans-serif\",\n                        \"color\": \"#222\"\n                    }\n\n                },\n                edges: {\n                    smooth: false,\n                    width: 0.2,\n                    color: {\n                        color: \"#222\"\n                    },\n                    arrows: {to: true},\n                    \"physics\": false,\n                    \"scaling\": {\n                        \"label\": false\n                    }\n                }\n            };\n\n            $.extend(settings, options);\n\n            // create a network\n            data = {\n                nodes: treeData.nodes ? treeData.nodes : [],\n                edges: treeData.edges ? treeData.edges : []\n            };\n\n        },\n\n        run: function () {\n            destroy();\n\n            network = new vis.Network(treeContainer, data, settings);\n\n            network.once('initRedraw', function () {\n\n                if (data.nodes.length > 100) {\n                    network.setOptions($.extend(settings, {\n                        physics: {\n                            hierarchicalRepulsion: {\n                                nodeDistance: 200\n                            },\n                            stabilization: {\n                                fit: false\n                            }\n                        }\n                    }));\n\n                    network.fit({\n                        nodes: [data.nodes[0].id, data.nodes[1].id], animation: {\n                            duration: 400,\n                            easingFunction: 'linear'\n                        }\n                    });\n                }\n\n            });\n        }\n    };\n\n    return treeRender;\n});\n\n","define('taoBackOffice/controller/tree/view',[\n    'layout/actions/binder',\n    'uri',\n    'jquery',\n    'context',\n    'helpers',\n    'taoBackOffice/treeRender'\n], function (binder, uri, $, context, helpers, treeRender) {\n    'use strict';\n\n    /**\n     *\n     * @type {{start: Function}}\n     */\n    var itemRunnerController = {\n\n        //the controller initialization\n        start: function () {\n        \t\n        \t$('.tree-container').each(function(i, obj) {\n        \t\tvar $container = $(obj);\n                var uri = $container.data('id');\n\n                $.post(helpers._url('getTree', 'Trees', 'taoBackOffice'), {uri: uri}, function (treeData) {\n\n                    var $parent = $container.closest('.content-block');\n\n                    var resizeContainer = function () {\n                        $container.height($parent.height() - $parent.find('.panel').eq(0).outerHeight());\n                        $container.width($parent.width());\n                    };\n\n                    $(window).on('resize', resizeContainer);\n\n                    resizeContainer();\n                    treeRender.init($container[0], treeData);\n                    treeRender.run();\n\n                });\n        \t});\n        }\n    };\n\n    // the controller is exposed\n    return itemRunnerController;\n});\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('@keyframes rota{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.list-container .container-content .list-element{display:flex;width:100%}.list-container .container-content .list-element-delete-btn{font-size:2em;cursor:pointer;margin-left:4px}.list-container .container-content .list-element__input-container{flex:1}.list-container .container-content .list-element__input-container__uri{display:none;align-items:center;margin-top:2px;margin-bottom:10px;background:#e1e2e3}.list-container .container-content .list-element .title{color:#222;border:1px #ccc solid;border-top-left-radius:2px;border-bottom-left-radius:2px;margin:0;padding:3px}.list-container .container-content .list-element .title~input{border-top-left-radius:0;border-bottom-left-radius:0;border-left:none}.list-container .container-content .list-element input{width:100%}.list-container .add-button-container{display:block;float:right;position:relative}.list-container .add-button-container .tooltip-container{width:100%;height:100%;position:absolute}.list-container .add-button-container .tooltip-hidden{display:none}.list-container .add-button-container .tooltipstered{display:block;width:100%;height:100%}.list-container .edit-uri{display:flex;color:initial;font-family:\\\"Source Sans Pro\\\",sans-serif}.section-container .content-block .data-container-wrapper .list-container form{background-color:#f3f1ef}.section-container .content-block .data-container-wrapper .list-container form .data-container-footer{border-top:0 !important}.with-uri .container-content .list-element__input-container__uri{display:flex}.container-content .pagination-container{display:flex;justify-content:space-between;padding:0 5px}.container-content .pagination-container>span{color:#838383}.container-content .pagination-container .icon-loop{display:inline-block;color:#3e7da7;font-size:1.25rem;margin-right:5px}.container-content .pagination-container .rotate{animation:rota 4s linear infinite}.create-list-wrapper{display:flex}.create-list-wrapper #createList{background:none;border:0;padding:0}.create-list-wrapper .form-toolbar{margin:10px 0 50px 0}\\n\\n/*# sourceMappingURL=../../../taoBackOffice/views/jsCss/list.css.map */');\n","\ndefine(\"taoBackOffice/loader/taoBackOffice.bundle\", function(){});\n"],"mappings":"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"}